{"version":3,"sources":["data/menuData.js","data/utils.js","data/timeData.js","redux/actionTypes.js","redux/actionCreators.js","server/server.js","data/cateringData.js","components/CateringCarousel.js","components/Catering.js","components/Footer.js","components/Home.js","components/MenuItems.js","components/Menu.js","components/OrderOnline.js","components/ContactUs.js","components/NavMenu.js","data/dateHelper.js","components/ReservationBookingInfo.js","components/ReservationWhatToKnow.js","components/Reservations.js","components/Main.js","redux/cateringReducer.js","redux/contactReducer.js","redux/menuReducer.js","redux/reserveReducer.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["MenuData","id","title","cTitle","price","category","getRandomRange","min","max","Math","floor","random","timeDataMap","Map","set","generateOneTimeData","ADD_CATERING_INQUERY","ADD_CONTACT_INQUERY","ADD_MENU_APPETIZER","ADD_MENU_DUMPLING","ADD_MENU_RICE","ADD_MENU_NOODLE","ADD_MENU_MEAT","ADD_MENU_DESSERT","FIND_A_TABLE","SELECT_TIME_SLOT","SELECT_ACTIVE_TAB","SET_RESERVE_NUM_PEOPLE","SET_RESERVE_DATE","SET_RESERVE_TIME","SET_RESERVE_CONFIRM_NUM","submitCateringInquery","cateringInquery","dispatch","console","log","addCateringInquery","type","ActionTypes","payload","addContactInquery","contactInquery","findATable","date","time","numOfPeople","availTimes","randomTimeSet","Set","sort","map","eachTime","get","filter","value","randomTimeData","getTableAvailTimes","submitReservation","firstName","lastName","phone","email","occasion","specialRequest","getState","reserve","submitReservationResult","selectedTimeSlot","confirmationNum","setReserveConfirmationNum","selectActiveTab","tab","addMenuItemsAppetizer","appetizerDishes","addMenuItemsDumpling","dumplingDishes","addMenuItemsRice","riceDishes","addMenuItemsNoodle","noodleDishes","addMenuItemsMeat","meatDishes","addMenuItemsDessert","dessertDishes","cateringData","src","altText","CateringCarousel","props","state","activeIndex","animating","setActiveIndex","bind","setAnimating","next","previous","goToIndex","index","this","setState","isAnimating","nextIndex","length","newIndex","slides","item","CarouselItem","onExiting","onExited","alt","Carousel","CarouselIndicators","items","onClickHandler","CarouselControl","direction","directionText","Component","initialValues","companyName","message","validate","values","errors","test","Catering","formik","useFormik","onSubmit","isInquerySubmitted","CateringHeader","Jumbotron","className","Fade","Button","Form","handleSubmit","Row","form","Col","xs","FormGroup","Label","for","Input","name","invalid","touched","getFieldProps","FormFeedback","placeholder","disabled","outline","Footer","InstagramIcon","icon","faInstagram","size","YoutubeIcon","faYoutubeSquare","FacebookIcon","faFacebookSquare","href","Home","FoodHeader","big","MenuItems","menuItem","menuData","dish","sm","md","toFixed","Container","Menu","useState","activeTab","setActiveTab","switchTab","MenuHeader","Nav","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","menu","appetizer","dumpling","rice","noodle","meat","dessert","OrderOnline","OrderOnlineHeader","subject","ContactUs","JSON","stringify","submitContactInquery","ContactHeader","style","border","allowfullscreen","loading","process","rows","NavMenu","isNavOpen","toggleNav","Navbar","expand","NavbarToggler","NavbarBrand","height","Collapse","isOpen","navbar","dayOfWeek","Array","monthOfYear","getReadableDate","shortDate","readableDate","Date","day","getDay","month","getMonth","getDate","ReservationBookingInfo","reserveDate","reserveSelectedTimeSlot","numOfPeopleStr","ReservationWhatToKnow","Reservations","selectReserveActiveTab","numOfPeopleIsOpen","setNumOfPeopleIsOpen","setNumOfPeople","setReserveNumOfPeople","getNumOfPeople","reserveNumOfPeople","timeIsOpen","setTimeIsOpen","setTime","setReserveTime","isReadyToFindATable","reserveTime","ReservationsHeader","UtensilsIcon","faUtensils","CheckCircleIcon","faCheckCircle","CheckCircleIconBig","AvailTimes","reserveAvailTimes","availTime","role","timeId","selectReserveTimeSlot","showStepNumOrFinished","stepNum","InputGroup","InputGroupButtonDropdown","addonType","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","InputGroupAddon","onChange","val","setReserveDate","target","timeStr","getTime","pattern","reserveConfirmNum","Main","addMenuItems","path","component","catering","inquerySubmitted","contact","to","withRouter","connect","inquery","forEach","currVal","push","timeslot","CateringReducer","inqueryData","action","ContactReducer","initialState","MenuReducer","findATableInitState","ReserveReducer","store","createStore","combineReducers","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b7b38c4.chunk.js","sourcesContent":["const MenuData = [\n    {\n        id: 1,\n        title: \"Fried Screw-Buns with Condensed Milk (4pcs)\",\n        cTitle: \"炸螺絲卷\",\n        price: 3.16,\n        category: \"dumpling\"\n    },\n    {\n        id: 2,\n        title: \"Pan Fried Beef Dumplings (2pcs)\",\n        cTitle: \"牛肉餡餅\",\n        price: 3.80,\n        category: \"dumpling\"\n    },\n    {\n        id: 3,\n        title: \"Pan Fried Marinated Beef Wraps (4pcs)\",\n        cTitle: \"大餅夾牛肉\",\n        price: 6.00,\n        category: \"dumpling\"\n    },\n    {\n        id: 4,\n        title: \"Pan Fried Chive Dumplings (2pcs)\",\n        cTitle: \"韭菜煎餅\",\n        price: 4.40,\n        category: \"dumpling\"\n    },\n    {\n        id: 5,\n        title: \"Pan Fried Pork Buns (3pcs)\",\n        cTitle: \"生煎包\",\n        price: 3.96,\n        category: \"dumpling\"\n    },\n    {\n        id: 6,\n        title: \"Steamed Pork Soup Dumplings (6pcs)\",\n        cTitle: \"小籠湯包\",\n        price: 6.00,\n        category: \"dumpling\"\n    },\n    {\n        id: 7,\n        title: \"Steamed Vegetable & Egg Dumplings (6pcs)\",\n        cTitle: \"花素蒸餃\",\n        price: 7.16,\n        category: \"dumpling\"\n    },\n    {\n        id: 8,\n        title: \"Steamed Crab Meat & Pork Soup Dumplings (6pcs)\",\n        cTitle: \"蟹黃小籠包\",\n        price: 10.00,\n        category: \"dumpling\"\n    },\n    {\n        id: 9,\n        title: \"Steamed XO Sauce & Pork Soup Dumplings (6pcs)\",\n        cTitle: \"XO醬小籠包\",\n        price: 6.80,\n        category: \"dumpling\"\n    },\n    {\n        id: 10,\n        title: \"Steamed Fish Dumplings (6pcs)\",\n        cTitle: \"鮮魚蒸餃\",\n        price: 7.16,\n        category: \"dumpling\"\n    },\n    {\n        id: 11,\n        title: \"Steamed Vegetable & Pork Dumplings (6pcs)\",\n        cTitle: \"菜肉蒸餃\",\n        price: 7.16,\n        category: \"dumpling\"\n    },\n    {\n        id: 12,\n        title: \"Shrimp & Pork Shaomai (6pcs)\",\n        cTitle: \"蝦仁燒賣\",\n        price: 7.16,\n        category: \"dumpling\"\n    },\n    {\n        id: 13,\n        title: \"Fried Noodles with Satay Beef\",\n        cTitle: \"沙茶牛肉炒麵\",\n        price: 10.36,\n        category: \"noodles\"\n    },\n    {\n        id: 14,\n        title: \"Noodles with Sesame & Peanuts in Spicy Sauce\",\n        cTitle: \"擔擔麵\",\n        price: 7.16,\n        category: \"noodles\"\n    },\n    {\n        id: 15,\n        title: \"Shanghai Fried Noodles\",\n        cTitle: \"上海粗炒麵\",\n        price: 11.40,\n        category: \"noodles\"\n    },\n    {\n        id: 16,\n        title: \"Noodle Soup with Beef & Beef Tendon\",\n        cTitle: \"紅燒半筋半肉麵\",\n        price: 10.36,\n        category: \"noodles\"\n    },\n    {\n        id: 17,\n        title: \"Noodle Soup with Beef\",\n        cTitle: \"紅燒牛肉麵\",\n        price: 9.56,\n        category: \"noodles\"\n    },\n    {\n        id: 18,\n        title: \"Noodles with Homemade Meat Sauce\",\n        cTitle: \"炸醬麵\",\n        price: 7.16,\n        category: \"noodles\"\n    },\n    {\n        id: 19,\n        title: \"Stir Fried Rice Cake with Pork Chop Shanghai Style\",\n        cTitle: \"上海排骨年糕\",\n        price: 10.36,\n        category: \"noodles\"\n    },\n    {\n        id: 20,\n        title: \"Stir Fried Rice Noodles with Pork & Vegetable\",\n        cTitle: \"炒米粉\",\n        price: 10.36,\n        category: \"noodles\"\n    },\n    {\n        id: 21,\n        title: \"Fried Homemade Noodles with Seafood & Pork\",\n        cTitle: \"海鮮粗炒麵\",\n        price: 10.36,\n        category: \"noodles\"\n    },\n    {\n        id: 22,\n        title: \"Fried Rice with Shrimps, Vegetables & Hams\",\n        cTitle: \"楊州炒飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 23,\n        title: \"Fried Rice with Beef & XO Sauce\",\n        cTitle: \"X0醬牛肉炒飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 24,\n        title: \"Fried Rice with Vegetables, Salted Pork & Chinese Sausages\",\n        cTitle: \"招牌菜飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 25,\n        title: \"Fried Rice with Shrimps\",\n        cTitle: \"蝦仁炒飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 26,\n        title: \"Spicy Fried Rice with Seafood & Shredded Pork\",\n        cTitle: \"海陸辣炒飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 27,\n        title: \"Fried Rice with Deep Fried Pork Chop\",\n        cTitle: \"排骨炒飯\",\n        price: 12.76,\n        category: \"rice\"\n    },\n    {\n        id: 28,\n        title: \"Fried Rice with Dry Scallops & Egg White\",\n        cTitle: \"瑤柱蛋白炒飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 29,\n        title: \"Fried Rice with Shredded\",\n        cTitle: \"炒飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 30,\n        title: \"Fried Rice with Sakura Shrimps\",\n        cTitle: \"櫻花蝦炒飯\",\n        price: 11.16,\n        category: \"rice\"\n    },\n    {\n        id: 31,\n        title: \"Cold Cucumbers in Garlic Sauce\",\n        cTitle: \"涼拌小黃瓜\",\n        price: 5.56,\n        category: \"appetizer\"\n    },\n    {\n        id: 32,\n        title: \"Cold Wined Boneless Chicken\",\n        cTitle: \"花雕醉雞\",\n        price: 6.36,\n        category: \"appetizer\"\n    },    \n    {\n        id: 33,\n        title: \"Vegetable & Pork Wontons with Hot & Sour Sauce\",\n        cTitle: \"紅油菜肉餛飩\",\n        price: 7.16,\n        category: \"appetizer\"\n    },    \n    {\n        id: 34,\n        title: \"Wontons with Hot & Sour Sauce\",\n        cTitle: \"紅油炒手\",\n        price: 6.36,\n        category: \"appetizer\"\n    },    \n    {\n        id: 35,\n        title: \"Deep Fried Tofu Pudding in Garlic Sauce\",\n        cTitle: \"老皮嫩肉\",\n        price: 5.20,\n        category: \"appetizer\"\n    },    \n    {\n        id: 36,\n        title: \"Tofu & Preserved Egg in Soy Sauce\",\n        cTitle: \"皮蛋豆腐\",\n        price: 5.56,\n        category: \"appetizer\"\n    },\n    {\n        id: 37,\n        title: \"Sweet & Sour Chicken\",\n        cTitle: \"咕嚕雞\",\n        price: 12.76,\n        category: \"meat\"\n    },\n    {\n        id: 38,\n        title: \"Cashew Nut Chicken\",\n        cTitle: \"腰果雞丁\",\n        price: 14.36,\n        category: \"meat\"\n    },\n    {\n        id: 39,\n        title: \"Gongbao Chicken\",\n        cTitle: \"宮保雞丁\",\n        price: 14.36,\n        category: \"meat\"\n    },\n    {\n        id: 40,\n        title: \"Wok Fried Spareribs with Salt & Hot Pepper\",\n        cTitle: \"椒鹽排骨\",\n        price: 14.36,\n        category: \"meat\"\n    },\n    {\n        id: 41,\n        title: \"Sweet & Sour Spareribs with Bell Peppers & Onion\",\n        cTitle: \"糖醋排骨\",\n        price: 12.76,\n        category: \"meat\"\n    },\n    {\n        id: 42,\n        title: \"Honey Garlic Spareribs\",\n        cTitle: \"蒜香蜜汁骨\",\n        price: 14.36,\n        category: \"meat\"\n    },\n    {\n        id: 43,\n        title: \"Stir Fried Shredded Beef & Green Onion with Soy Sauce\",\n        cTitle: \"蔥爆牛肉\",\n        price: 13.56,\n        category: \"meat\"\n    },\n    {\n        id: 44,\n        title: \"Pan Fried Garlic Beef Steak\",\n        cTitle: \"蒜香牛肉\",\n        price: 14.36,\n        category: \"meat\"\n    },\n    {\n        id: 45,\n        title: \"Stir Fried Beef with Black Bean Sauce\",\n        cTitle: \"豉椒牛肉\",\n        price: 14.36,\n        category: \"meat\"\n    },\n    {\n        id: 46,\n        title: \"Coconut Tapioca\",\n        cTitle: \"椰汁西米露\",\n        price: 3.40,\n        category: \"dessert\"\n    },\n    {\n        id: 47,\n        title: \"Malay Sponge Cake\",\n        cTitle: \"馬來糕\",\n        price: 3.16,\n        category: \"dessert\"\n    },\n    {\n        id: 48,\n        title: \"Red Bean Paste Pancake\",\n        cTitle: \"豆沙鍋餅\",\n        price: 7.60,\n        category: \"dessert\"\n    },\n    {\n        id: 49,\n        title: \"Steamed Glutinous Rice & Red Bean Paste Dumplings\",\n        cTitle: \"麻糬豆沙小包\",\n        price: 5.20,\n        category: \"dessert\"\n    },\n    {\n        id: 50,\n        title: \"Steamed Mashed Taro Buns\",\n        cTitle: \"芋泥包\",\n        price: 3.60,\n        category: \"dessert\"\n    },\n    {\n        id: 51,\n        title: \"Steamed Red Bean Paste Buns\",\n        cTitle: \"豆沙包\",\n        price: 3.40,\n        category: \"dessert\"\n    },\n    {\n        id: 52,\n        title: \"Steamed Red Bean Paste Dumplings\",\n        cTitle: \"豆沙小包\",\n        price: 3.40,\n        category: \"dessert\"\n    },\n    {\n        id: 53,\n        title: \"Steamed Salted Egg & Condensed Milk Buns\",\n        cTitle: \"奶黃包\",\n        price: 3.60,\n        category: \"dessert\"\n    },\n    {\n        id: 54,\n        title: \"Steamed Sesame Paste Buns\",\n        cTitle: \"芝麻包\",\n        price: 3.60,\n        category: \"dessert\"\n    }\n];\n\nexport default MenuData;","export function getRandomRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}","import { getRandomRange } from \"./utils\";\n\nexport const timeDataMap = new Map()\n                    .set(\"1700\", \"5:00pm\")\n                    .set(\"1730\", \"5:30pm\")\n                    .set(\"1800\", \"6:00pm\")\n                    .set(\"1830\", \"6:30pm\")\n                    .set(\"1900\", \"7:00pm\")\n                    .set(\"1930\", \"7:30pm\")\n                    .set(\"2000\", \"8:00pm\")\n                    .set(\"2030\", \"8:30pm\")\n                    .set(\"2100\", \"9:00pm\")\n                    .set(\"2130\", \"9:30pm\")\n                    .set(\"2200\", \"10:00pm\")\n                    .set(\"2230\", \"10:30pm\")\n                    .set(\"2300\", \"11:00pm\")\n                    .set(\"2330\", \"11:30pm\");\n\n\nfunction generateOneTimeData() {\n    let hours = getRandomRange(16, 24);\n    \n    let minutesDigit = getRandomRange(0, 2);\n    let minutes = \"\"\n    if (minutesDigit === 0)\n        minutes = \"00\";\n    else\n        minutes = \"30\";\n\n    return hours + minutes;\n}\n\n\n\n export const randomTimeData = () => {\n\n    // Make sure we don't have duplicate\n    let randomTimeSet = new Set([generateOneTimeData(), \n                                 generateOneTimeData(), \n                                 generateOneTimeData(),\n                                 generateOneTimeData(),\n                                 generateOneTimeData()]);\n\n    // sort and remove undefined ones.                                 \n    let randomTimeArray = [...randomTimeSet].sort().map((eachTime) => {\n        return {id: eachTime, time: timeDataMap.get(eachTime)};\n    })\n    .filter((value) => {\n        return (typeof value.time !== 'undefined');\n    })\n\n    return randomTimeArray;\n }","export const ADD_CATERING_INQUERY = \"ADD_CATERING_INQUERY\";\nexport const ADD_CONTACT_INQUERY = \"ADD_CONTACT_INQUERY\";\n\nexport const ADD_MENU_APPETIZER = \"ADD_MENU_APPETIZER\";\nexport const ADD_MENU_DUMPLING = \"ADD_MENU_DUMPLING\";\nexport const ADD_MENU_RICE = \"ADD_MENU_RICE\";\nexport const ADD_MENU_NOODLE = \"ADD_MENU_NOODLE\";\nexport const ADD_MENU_MEAT = \"ADD_MENU_MEAT\";\nexport const ADD_MENU_DESSERT = \"ADD_MENU_DESSERT\";\n\nexport const FIND_A_TABLE = \"FIND_A_TABLE\";\nexport const SELECT_TIME_SLOT = \"SELECT_TIME_SLOT\";\nexport const SELECT_ACTIVE_TAB = \"SELECT_ACTIVE_TAB\";\nexport const SET_RESERVE_NUM_PEOPLE = \"SET_RESERVE_NUM_PEOPLE\";\nexport const SET_RESERVE_DATE = \"SET_RESERVE_DATE\";\nexport const SET_RESERVE_TIME = \"SET_RESERVE_TIME\";\nexport const SET_RESERVE_CONFIRM_NUM = \"SET_RESERVE_CONFIRM_NUM\";","import MenuData from '../data/menuData';\nimport { randomTimeData } from '../data/timeData';\nimport { submitReservation as submitReservationToServer } from '../server/server';\nimport { submitCateringInquery as submitCateringInqueryToServer } from '../server/server';\nimport { submitContactInquery as submitContactInqueryToServer } from '../server/server';\nimport * as ActionTypes from './actionTypes';\n\nexport const submitCateringInquery = (cateringInquery) => (dispatch) => {\n    submitCateringInqueryToServer(cateringInquery);\n    dispatch(addCateringInquery(cateringInquery));\n};\n\nexport const submitContactInquery = (contactInquery) => (dispatch) => {\n    submitContactInqueryToServer(contactInquery);\n    dispatch(addContactInquery(contactInquery));\n};\n\n\nexport const addCateringInquery = (cateringInquery) => ({\n    type: ActionTypes.ADD_CATERING_INQUERY,\n    payload: cateringInquery\n});\n\nexport const addContactInquery = (contactInquery) => ({\n    type: ActionTypes.ADD_CONTACT_INQUERY,\n    payload: contactInquery\n});\n\n\nexport const findATable = (date, time, numOfPeople) => (dispatch) => {\n    const availTimes = randomTimeData();\n    dispatch(getTableAvailTimes(date, time, numOfPeople, availTimes));\n};\n\n\nexport const getTableAvailTimes = (date, time, numOfPeople, availTimes) => ({\n    type: ActionTypes.FIND_A_TABLE,\n    payload: {\n        date: date,\n        time: time,\n        numOfPeople: numOfPeople,\n        availTimes: availTimes\n    }\n});\n\nexport const submitReservation = (firstName, lastName, phone, email, occasion, specialRequest) => (dispatch, getState) => {\n\n    // Submit reservation\n    let reserve = getState().reserve;\n    let selectedTimeSlot = reserve.selectedTimeSlot;\n    let reserveDate = reserve.date;\n    let numOfPeople = reserve.numOfPeople;\n    let submitReservationResult = submitReservationToServer(reserveDate, \n                                                            selectedTimeSlot, \n                                                            numOfPeople, \n                                                            firstName, \n                                                            lastName, \n                                                            phone, \n                                                            email, \n                                                            occasion, \n                                                            specialRequest);\n\n    dispatch(setReserveConfirmationNum(submitReservationResult.confirmationNum));\n    dispatch(selectActiveTab('yourReservation'));\n};\n\n\nexport const setReserveConfirmationNum = (confirmationNum) => ({\n    type: ActionTypes.SET_RESERVE_CONFIRM_NUM,\n    payload: confirmationNum\n});\n\nexport const selectReserveTimeSlot = (selectedTimeSlot) => ({\n    type: ActionTypes.SELECT_TIME_SLOT,\n    payload: selectedTimeSlot\n});\n\nexport const selectActiveTab = (tab) => ({\n    type: ActionTypes.SELECT_ACTIVE_TAB,\n    payload: tab\n});\n\nexport const setReserveNumOfPeople = (numOfPeople) => ({\n    type: ActionTypes.SET_RESERVE_NUM_PEOPLE,\n    payload: numOfPeople\n});\n\nexport const setReserveDate = (date) => ({\n    type: ActionTypes.SET_RESERVE_DATE,\n    payload: date\n});\n\nexport const setReserveTime = (time) => ({\n    type: ActionTypes.SET_RESERVE_TIME,\n    payload: time\n});\n\nexport const addMenuItems = () => (dispatch) => {\n\n    let appetizerDishes = [];\n    let dumplingDishes = [];\n    let riceDishes = [];\n    let noodleDishes = [];\n    let meatDishes = [];\n    let dessertDishes = [];\n\n    MenuData.forEach((currVal) => {\n        if (currVal.category === 'appetizer')\n            appetizerDishes.push(currVal);\n        else if (currVal.category === 'dumpling')\n            dumplingDishes.push(currVal);\n        else if (currVal.category === 'rice')\n            riceDishes.push(currVal);            \n        else if (currVal.category === 'noodles')\n            noodleDishes.push(currVal);            \n        else if (currVal.category === 'meat')\n            meatDishes.push(currVal);            \n        else if (currVal.category === 'dessert')\n            dessertDishes.push(currVal);            \n    });\n\n    dispatch(addMenuItemsAppetizer(appetizerDishes));\n    dispatch(addMenuItemsDumpling(dumplingDishes));\n    dispatch(addMenuItemsRice(riceDishes));\n    dispatch(addMenuItemsNoodle(noodleDishes));\n    dispatch(addMenuItemsMeat(meatDishes));\n    dispatch(addMenuItemsDessert(dessertDishes));\n};\n\nexport const addMenuItemsAppetizer = (appetizerDishes) => ({\n    type: ActionTypes.ADD_MENU_APPETIZER,\n    payload: appetizerDishes\n});\n\nexport const addMenuItemsDumpling = (dumplingDishes) => ({\n    type: ActionTypes.ADD_MENU_DUMPLING,\n    payload: dumplingDishes\n});\n\nexport const addMenuItemsRice = (riceDishes) => ({\n    type: ActionTypes.ADD_MENU_RICE,\n    payload: riceDishes\n});\n\nexport const addMenuItemsNoodle = (noodleDishes) => ({\n    type: ActionTypes.ADD_MENU_NOODLE,\n    payload: noodleDishes\n});\n\nexport const addMenuItemsMeat = (meatDishes) => ({\n    type: ActionTypes.ADD_MENU_MEAT,\n    payload: meatDishes\n});\n\nexport const addMenuItemsDessert = (dessertDishes) => ({\n    type: ActionTypes.ADD_MENU_DESSERT,\n    payload: dessertDishes\n});","import { getRandomRange } from \"../data/utils\";\n\nexport const submitReservation = (date, time, numOfPeople, firstName, lastName, phone, email, occasion, specialRequest) => {\n\n    // Simulating submit reservation to server.\n    return {confirmationNum: getRandomRange(1000000, 9999999)};\n}\n\n\nexport const submitCateringInquery = (cateringInquery) => {\n\n    // Simulating submit catering inquery to server.\n    console.log(\"submitCateringInquery Server\");\n    return true;\n}\n\n\nexport const submitContactInquery = (contactInquery) => {\n\n    // Simulating submit contact inquery to server.\n    return true;\n}","export const cateringData = [\n    {\n        src: 'assets/images/1a.jpg',\n        altText: 'Slide 1'\n    },\n    {\n        src: 'assets/images/2a.jpg',\n        altText: 'Slide 2'\n    },\n    {\n        src: 'assets/images/3a.jpg',\n        altText: 'Slide 3'\n    },\n    {\n        src: 'assets/images/4a.jpg',\n        altText: 'Slide 4'\n    },\n    {\n        src: 'assets/images/5a.jpg',\n        altText: 'Slide 5'\n    },\n    {\n        src: 'assets/images/6a.jpg',\n        altText: 'Slide 6'\n    },\n    {\n        src: 'assets/images/7a.jpg',\n        altText: 'Slide 7'\n    },\n    {\n        src: 'assets/images/8a.jpg',\n        altText: 'Slide 8'\n    },\n    {\n        src: 'assets/images/9a.jpg',\n        altText: 'Slide 9'\n    },\n    {\n        src: 'assets/images/10a.jpg',\n        altText: 'Slide 10'\n    },\n];","import { Component } from \"react\";\nimport { Carousel, CarouselControl, CarouselIndicators, CarouselItem } from \"reactstrap\";\nimport { cateringData } from '../data/cateringData';\n\n\n\nclass CateringCarousel extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeIndex: 0,\n            animating: false\n        };\n\n        this.setActiveIndex = this.setActiveIndex.bind(this);\n        this.setAnimating = this.setAnimating.bind(this);\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.goToIndex = this.goToIndex.bind(this);\n    }\n\n\n    setActiveIndex(index) {\n        this.setState({\n            activeIndex: index\n        });\n    }\n\n    setAnimating(isAnimating) {\n        this.setState({\n            animating: isAnimating\n        });\n    }\n\n    next() {\n        if (this.state.animating) return;\n        const nextIndex = this.state.activeIndex === cateringData.length - 1 ? 0 : this.state.activeIndex + 1;\n        this.setActiveIndex(nextIndex);\n    }\n    \n    previous() {\n        if (this.state.animating) return;\n        const nextIndex = this.state.activeIndex === 0 ? cateringData.length - 1 : this.state.activeIndex - 1;\n        this.setActiveIndex(nextIndex);\n    }\n    \n    goToIndex(newIndex) {\n        if (this.state.animating) return;\n        this.setActiveIndex(newIndex);\n    }\n\n\n    render() {\n        \n        var slides = cateringData.map((item) => {\n            return (\n              <CarouselItem\n                onExiting={() => this.setAnimating(true)}\n                onExited={() => this.setAnimating(false)}\n                key={item.src}>\n                <img src={item.src} alt={item.altText} />\n              </CarouselItem>\n            );\n        });\n\n        return (\n            <Carousel activeIndex={this.state.activeIndex} next={this.next} previous={this.previous}>\n                <CarouselIndicators items={cateringData} activeIndex={this.state.activeIndex} onClickHandler={this.goToIndex}/>\n                {slides}\n                <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\n                <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\n            </Carousel>\n        );\n    }\n\n\n}\n\nexport default CateringCarousel;","import { Fragment } from \"react\";\nimport { Button, Col, Form, FormFeedback, FormGroup, Input, Jumbotron, Label, Row, Fade } from \"reactstrap\";\nimport { useFormik } from 'formik';\nimport CateringCarousel from \"./CateringCarousel\";\n\n\nconst initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    companyName: \"\",\n    date: \"\",\n    numOfPeople: 1,\n    email: \"\",\n    message: \"\"\n};\n\nconst validate = (values) => {\n    let errors = {};\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!values.firstName) {\n        errors.firstName = 'Required'\n    }\n\n    if (!values.lastName) {\n        errors.lastName = 'Required'\n    }\n\n    if (!values.date) {\n        errors.date = 'Required'\n    }\n\n    if (values.numOfPeople === 0) {\n        errors.numOfPeople = 'Number of people needs to be great than 0'\n    }\n\n    if (!values.email) {\n        errors.email = 'Required'\n    }\n    else if (!emailRegex.test(values.email)) {\n        errors.email = \"Please enter a valid email address\";\n    }\n\n    if (!values.message) {\n        errors.message = 'Please enter a message'\n    }            \n\n    return errors;\n};\n\n\nfunction Catering(props) {\n\n    console.log(\"catering props:\", props);\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        onSubmit: (values) => {\n            if (!props.isInquerySubmitted)\n                props.submitCateringInquery(values);\n        },\n        validate: validate\n    });\n\n    const CateringHeader = () => {\n        return (\n            <Jumbotron className=\"jumbotron-fluid catering_bg_img\">\n                <div className=\"container pt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 className=\"display-4 pt-5 home_jumbotron_text\">Catering</h1>\n                            <div>&nbsp;</div>\n                            <p className=\"lead home_jumbotron_text\">We believe food should be beautifully designed, purposefully executed, and hand-crafted.</p>\n                            <p className=\"lead home_jumbotron_text\">Let our talented chefs and events team pamper you and your loved ones in the comfort of your home. Breathtaking cuisine, attentive service, and flawless execution await.</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    };\n\n    // console.log(\"Form values\", formik.values);\n    // console.log(\"Form errors\", ormik.touched.firstName);\n\n    return (\n        <Fragment>\n            <CateringHeader/>\n            <Fade>\n                <div className=\"container\">\n                    <div className=\"row pb-4\">\n                        <div className=\"col-12 text-center topic-text text-bold\">\n                            <div>Catering Inquiries</div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6 \">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-12 text-center\">\n                                        <div className=\"pb-3\">25 orders minimum for delivery</div>\n                                        <div className=\"pb-3\">Delivery available between 11am-11:30am</div>\n                                        <div className=\"pb-4\">Pick-up times available upon request</div>\n                                        <Button className=\"form-field p-3\">CATERING MENU</Button>\n                                        <hr className=\"pt-2 pb-2\"/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-12 text-center\">\n                                        <CateringCarousel/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"container pt-5 pt-md-0\">\n                                <Form onSubmit={formik.handleSubmit}>\n                                    <Row form>\n                                        <Col xs={6}>\n                                            <FormGroup>\n                                                <Label for=\"firstName\">First Name</Label>\n                                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" \n                                                        className=\"form-field\"\n                                                        invalid={formik.errors.firstName && formik.touched.firstName ? true : false}                                                     \n                                                        {...formik.getFieldProps('firstName')}/>\n                                                <FormFeedback>{formik.errors.firstName}</FormFeedback> \n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs={6}>\n                                            <FormGroup>\n                                                <Label for=\"lastName\">Last Name</Label>\n                                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" \n                                                    className=\"form-field\"\n                                                    invalid={formik.errors.lastName && formik.touched.lastName ? true : false}                                              \n                                                    {...formik.getFieldProps('lastName')}/>\n                                                <FormFeedback>{formik.errors.lastName}</FormFeedback>                                                  \n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <FormGroup>\n                                        <Label for=\"companyName\">Company Name</Label>\n                                        <Input type=\"text\" name=\"companyName\" id=\"companyName\" \n                                            placeholder=\"(if applicable)\"\n                                            className=\"form-field\"\n                                            {...formik.getFieldProps('companyName')} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"date\">Date</Label>\n                                        <Input type=\"date\" name=\"date\" id=\"date\" \n                                            className=\"form-field\"\n                                            invalid={formik.errors.date && formik.touched.date ? true : false}                                      \n                                            {...formik.getFieldProps('date')}/>\n                                        <FormFeedback>{formik.errors.date}</FormFeedback> \n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"numOfPeople\">Number of People</Label>\n                                        <Input type=\"number\" name=\"numOfPeople\" id=\"numOfPeople\" min=\"1\"\n                                            className=\"form-field\"\n                                            invalid={formik.errors.numOfPeople && formik.touched.numOfPeople ? true : false}  \n                                            {...formik.getFieldProps('numOfPeople')} />\n                                        <FormFeedback>{formik.errors.numOfPeople}</FormFeedback>  \n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"numOfPeople\">Your Email</Label>\n                                        <Input type=\"email\" name=\"email\" id=\"email\"\n                                            className=\"form-field\"\n                                            invalid={formik.errors.email && formik.touched.email ? true : false} \n                                            {...formik.getFieldProps('email')} />\n                                        <FormFeedback>{formik.errors.email}</FormFeedback> \n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"numOfPeople\">Message</Label>\n                                        <Input type=\"textarea\" name=\"message\" id=\"message\" \n                                            className=\"form-field\"\n                                            invalid={formik.errors.message && formik.touched.message ? true : false}\n                                            {...formik.getFieldProps('message')} />\n                                        <FormFeedback>{formik.errors.message}</FormFeedback>\n                                    </FormGroup>    \n                                    <Button type=\"submit\" className=\"form-field pt-3 pb-3 pl-4 pr-4 mt-4\" disabled={props.isInquerySubmitted} outline>\n                                        {props.isInquerySubmitted ? 'SUBMITTED' : 'SUBMIT'}\n                                    </Button>                            \n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">                    \n                    </div>\n                </div>\n            </Fade>\n        </Fragment>\n    );\n}\n\nexport default Catering;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInstagram, faYoutubeSquare, faFacebookSquare } from '@fortawesome/free-brands-svg-icons';\n\nfunction Footer(props) {\n\n    const InstagramIcon = <FontAwesomeIcon icon={faInstagram} size=\"1x\"/>\n    const YoutubeIcon = <FontAwesomeIcon icon={faYoutubeSquare} size=\"1x\"/>\n    const FacebookIcon = <FontAwesomeIcon icon={faFacebookSquare} size=\"1x\"/>\n\n    return (\n        <div className=\"container\">\n            <hr/>\n            <div className=\"row text-center\">\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12 p-0\">\n                                <div >101 9 Avenue SW</div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 p-0\">\n                                <div >Calgary, AB T2P1J9</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"container\">\n                        <div className=\"row \">\n                            <div className=\"col-12 p-0 \">\n                                <div><a href=\"tel:403-888-8888\">403-888-8888</a></div>\n                            </div>\n                        </div>\n                        <div className=\"row \">\n                            <div className=\"col-12 p-0 \">\n                                <div>{InstagramIcon} {YoutubeIcon} {FacebookIcon}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-1\"></div>\n                            <div className=\"col-5 pr-0 pl-0\">Mon - Sat</div>\n                            <div className=\"col-5 pl-0 \">11am - 9pm</div>\n                            <div className=\"col-1\"></div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-1\"></div>\n                            <div className=\"col-5 pr-0 pl-0\">Sun</div>\n                            <div className=\"col-5 pl-0 \">11am - 6pm</div>\n                            <div className=\"col-1\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n        </div>\n    );\n}\n\nexport default Footer;","import { Fragment } from \"react\";\nimport { Jumbotron, Fade } from \"reactstrap\";\n\nfunction Home(props) {\n\n    const FoodHeader = () => {\n        return (\n            <Jumbotron className=\"jumbotron-fluid home_bg_img\">\n                <div className=\"container pt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 className=\"display-4 pt-5 home_jumbotron_text\">Simply Dumplings</h1>\n                            <div>&nbsp;</div>\n                            <p className=\"lead home_jumbotron_text\">From the hands of our chefs, to the comfort of your home.</p>\n                            <p className=\"lead home_jumbotron_text\">Restaurant quality meals for home &amp; business catering, curbside pick-up &amp; delivery.</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    };\n\n\n\n    return (\n        <Fragment>\n            <FoodHeader/>\n            <Fade big>\n                <div className=\"container\">\n                    <div className=\"row justify-content-center \">\n                        <div className=\"text-bold\">Online Ordering &amp; Curbside Pickup</div>\n                    </div>\n                    <div className=\"row justify-content-center pb-2 pt-3\">\n                        <div>Hours:</div>\n                    </div>\n                    <div className=\"row justify-content-center p-2\">\n                        <div>Monday - Saturday 11am - 9pm</div>\n                    </div>\n                    <div className=\"row justify-content-center p-2\">\n                        <div>Sunday 11am - 6pm</div>\n                    </div>\n                    <div>&nbsp;</div>\n                </div>\n            </Fade>\n        </Fragment>\n    );\n}\n\nexport default Home;","import { Col, Container, Row } from \"reactstrap\";\n\n\nfunction MenuItems(props) {\n\n    const menuItem = props.menuData.map((dish) => {\n        return (\n            <Col key={dish.id} xs=\"12\" sm=\"6\" md=\"4\" className=\"dishes-menu-text pb-2\">\n                <Row>\n                    <Col xs=\"9\" >\n                        <div >{dish.title}</div>\n                    </Col>\n                    <Col xs=\"3\">\n                        <div className=\"float-right\">{dish.price.toFixed(2)}</div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"12\" className=\"dishes-menu-cText\">\n                        <div>{dish.cTitle}</div>\n                    </Col>\n                </Row>\n            </Col>\n        );\n    });\n\n\n    return (\n        <Container className=\"pt-4 pb-3\">\n            <Row>\n                {menuItem}\n            </Row>\n        </Container>\n    );\n}\n\nexport default MenuItems;","import classnames from \"classnames\";\nimport { Fragment, useState } from \"react\";\nimport { Fade, Jumbotron, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport MenuItems from \"./MenuItems\";\n\n\nfunction Menu(props) {\n\n    // tab state\n    const [activeTab, setActiveTab] = useState('appetizer');\n    const switchTab = tab => {\n        if (activeTab !== tab) setActiveTab(tab);\n    }\n\n    const MenuHeader = () => {\n        return (\n            <Jumbotron className=\"jumbotron-fluid menu_bg_img\">\n                <div className=\"container pt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 className=\"display-4 pt-5 home_jumbotron_text\">Menu</h1>\n                            <div>&nbsp;</div>\n                            <p className=\"lead home_jumbotron_text\">Passion, Community and Made-Right-Here Goodness.</p>\n                            <p className=\"lead home_jumbotron_text\">We are all about lifting your day and spirits with delicious food, warm smiles and efficient service.</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    };\n\n\n    return (\n        <Fragment>\n            <MenuHeader/>\n            <div className=\"container\">\n                <Nav className=\"menu-page-nav\">\n                    <NavItem>\n                        <NavLink className={classnames({active: activeTab === 'appetizer'})}\n                        onClick={() => switchTab('appetizer')}>\n                            Appetizer\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({active: activeTab === 'dumpling'})}\n                        onClick={() => switchTab('dumpling')}>\n                            Dumpling\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({active: activeTab === 'rice'})}\n                        onClick={() => switchTab('rice')}>\n                            Rice\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({active: activeTab === 'noodle'})}\n                        onClick={() => switchTab('noodle')}>\n                            Noodle\n                        </NavLink>\n                    </NavItem>  \n                    <NavItem>\n                        <NavLink className={classnames({active: activeTab === 'meat'})}\n                        onClick={() => switchTab('meat')}>\n                            Meat\n                        </NavLink>\n                    </NavItem> \n                    <NavItem>\n                        <NavLink className={classnames({active: activeTab === 'dessert'})}\n                        onClick={() => switchTab('dessert')}>\n                            Dessert\n                        </NavLink>\n                    </NavItem>                                                           \n                </Nav>\n                <Fade>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"appetizer\">\n                            <MenuItems menuData={props.menu.appetizer}/>\n                        </TabPane>\n                        <TabPane tabId=\"dumpling\">\n                            <MenuItems menuData={props.menu.dumpling}/>\n                        </TabPane>\n                        <TabPane tabId=\"rice\">\n                            <MenuItems menuData={props.menu.rice}/>\n                        </TabPane>\n                        <TabPane tabId=\"noodle\">\n                            <MenuItems menuData={props.menu.noodle}/>\n                        </TabPane>   \n                        <TabPane tabId=\"meat\">\n                            <MenuItems menuData={props.menu.meat}/>\n                        </TabPane>  \n                        <TabPane tabId=\"dessert\">\n                            <MenuItems menuData={props.menu.dessert}/>\n                        </TabPane>                                                        \n                    </TabContent>\n                </Fade>\n                <div className=\"row\">\n                    <div></div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\n\nexport default Menu;","import { Fragment } from \"react\";\nimport { Button, Fade, Jumbotron } from \"reactstrap\";\n\n\nfunction OrderOnline(props) {\n\n    const OrderOnlineHeader = () => {\n        return (\n            <Jumbotron className=\"jumbotron-fluid order_online_bg_img\">\n                <div className=\"container pt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 className=\"display-4 pt-5 home_jumbotron_text\">Online Ordering</h1>\n                            <div>&nbsp;</div>\n                            <p className=\"lead home_jumbotron_text\">Simple. Healthy. Rewarding.</p>\n                            <p className=\"lead home_jumbotron_text\">Say hello to easy ordering, custom menus and free food. Make your first purchase on the web and get a $5 reward.</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    };\n\n    return (\n        <Fragment>\n            <OrderOnlineHeader/>\n            <Fade>\n                <div className=\"container\">\n                    <div className=\"row \">\n                        <div className=\"col-12 text-center\">\n                            <Button className=\"form-field pt-3 pb-3 pl-4 pr-4 mt-4\">ONLINE ORDER PICK-UP</Button>\n                        </div>\n                        <div className=\"col-12 text-center pt-5 pb-3\">\n                            <div>Please note:</div>\n                        </div>\n                        <div className=\"col-12 text-center pt-3 pb-4\">\n                            <div>\n                                Pick-up times are predetermined based on volume. \n                                Be sure to note your pick-up time when checking out of the online store.\n                                We can better accommodate requests for pick-up times after 3pm over the phone.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fade>\n        </Fragment>\n    );\n}\n\nexport default OrderOnline;","import { useFormik } from 'formik';\nimport { Fragment } from \"react\";\nimport { Button, Col, Form, FormFeedback, FormGroup, Input, Jumbotron, Label, Row, Fade } from \"reactstrap\";\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    subject: '',\n    message: ''\n};\n\nconst validate = (values) => {\n    let errors = {};\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!values.firstName) {\n        errors.firstName = 'Required';\n    }\n    \n    if (!values.lastName) {\n        errors.lastName = 'Required';\n    }\n    \n    if (!values.email) {\n        errors.email = 'Required';\n    }\n    else if (!emailRegex.test(values.email)) {\n        errors.email = \"Please enter a valid email address\";\n    }\n\n    if (!values.subject) {\n        errors.subject = 'Required';\n    }\n    \n    if (!values.message) {\n        errors.message = 'Required';\n    }\n\n    return errors;\n};\n\n\n\nfunction ContactUs(props) {\n\n    const onSubmit = (values) => {\n        console.log(\"onSubmit: \" + JSON.stringify(values));\n        if (!props.isInquerySubmitted)\n            props.submitContactInquery(values);\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validate: validate\n    });\n\n    const ContactHeader = () => {\n        return (\n            <Jumbotron className=\"jumbotron-fluid contact_bg_img\">\n                <div className=\"container pt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 className=\"display-4 pt-5 home_jumbotron_text\">Contact Us</h1>\n                            <div>&nbsp;</div>\n                            <p className=\"lead home_jumbotron_text\">Let's get in touch.</p>\n                            <p className=\"lead home_jumbotron_text\">Have a question for us? Take a look below to learn more.</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    };\n\n\n    return (\n        <Fragment>\n            <ContactHeader/>\n            <Fade>\n                <div className=\"container pb-4\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"embed-responsive embed-responsive-4by3\">\n                                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2508.472183525992!2d-114.06521838412228!3d51.04436855227244!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x53716ffd8b153d15%3A0xd249f37347b3ac6!2s101%209%20Ave%20SW%2C%20Calgary%2C%20AB%20T2P%201J9!5e0!3m2!1sen!2sca!4v1618181467347!5m2!1sen!2sca\" title=\"map\" style={{border:0}} allowfullscreen=\"\" loading=\"lazy\"></iframe>\n                            </div>\n                            <div className=\"pt-5 pb-5 pl-1\">\n                                <a href={process.env.PUBLIC_URL + \"/#/catering\"} className=\"font-weight-normal\">Click Here For Catering Inquiries</a>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            \n                            <div className=\"pl-1 font-weight-normal\">We welcome your suggestions. Please send us your questions, feedback and comments.</div>\n                            <div className=\"container pl-1 pr-1 pt-4\">\n                                <Form onSubmit={formik.handleSubmit}>\n                                    <Row form>\n                                        <Col xs={6}>\n                                            <FormGroup>\n                                                <Label for=\"firstName\">First Name</Label>\n                                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" \n                                                        className=\"form-field\"\n                                                        invalid={formik.errors.firstName && formik.touched.firstName ? true : false}\n                                                        {...formik.getFieldProps('firstName')}/>\n                                                <FormFeedback>{formik.errors.firstName}</FormFeedback> \n                                            </FormGroup>\n                                            \n                                        </Col>\n                                        <Col xs={6}>\n                                            <FormGroup>\n                                                <Label for=\"lastName\">Last Name</Label>\n                                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" \n                                                    className=\"form-field\"\n                                                    invalid={formik.errors.lastName && formik.touched.lastName ? true : false}\n                                                    {...formik.getFieldProps('lastName')}/>   \n                                                <FormFeedback>{formik.errors.lastName}</FormFeedback>                                                \n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <FormGroup>\n                                        <Label for=\"numOfPeople\">Your Email</Label>\n                                        <Input type=\"email\" name=\"email\" id=\"email\"\n                                            className=\"form-field\"\n                                            invalid={formik.errors.email && formik.touched.email ? true : false}\n                                            {...formik.getFieldProps('email')}/> \n                                        <FormFeedback>{formik.errors.email}</FormFeedback>    \n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"companyName\">Subject</Label>\n                                        <Input type=\"text\" name=\"subject\" id=\"subject\" \n                                            className=\"form-field\"\n                                            invalid={formik.errors.subject && formik.touched.subject ? true : false}\n                                            {...formik.getFieldProps('subject')}/>\n                                        <FormFeedback>{formik.errors.subject}</FormFeedback>  \n                                    </FormGroup>    \n                                    <FormGroup>\n                                        <Label for=\"numOfPeople\">Message</Label>\n                                        <Input type=\"textarea\" rows=\"4\" name=\"message\" id=\"message\" \n                                            className=\"form-field\"\n                                            invalid={formik.errors.message && formik.touched.message ? true : false}\n                                            {...formik.getFieldProps('message')}/>\n                                        <FormFeedback>{formik.errors.message}</FormFeedback>  \n                                    </FormGroup>    \n                                    <Button type=\"submit\" className=\"form-field pt-3 pb-3 pl-4 pr-4 mt-4\" disabled={props.isInquerySubmitted} outline>\n                                        {props.isInquerySubmitted ? 'SUBMITTED'  : 'SUBMIT'}\n                                    </Button>                                                             \n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fade>\n        </Fragment>\n    );\n\n}\n\nexport default ContactUs;","import { Component } from \"react\";\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from \"reactstrap\";\n\nclass NavMenu extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n\n        return (\n            <div >\n                <Navbar className=\"menu-bar\" expand=\"md\" >\n                    <NavbarToggler onClick={this.toggleNav}/>\n                    <NavbarBrand href={process.env.PUBLIC_URL + \"/\"}>\n                        <img src=\"assets/images/dumpling_logo.png\" \n                            alt=\"dumpling logo\" \n                            height=\"70\"/>\n                    </NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink href={process.env.PUBLIC_URL + \"/#/menu\"}>MENU</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href={process.env.PUBLIC_URL + \"/#/catering\"}>CATERING</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href={process.env.PUBLIC_URL + \"/#/order\"}>ORDER ONLINE</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href={process.env.PUBLIC_URL + \"/#/reserve\"}>RESERVATIONS</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href={process.env.PUBLIC_URL + \"/#/contactus\"}>CONTACT</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n\n\n}\n\n\nexport default NavMenu;","\nlet dayOfWeek = new Array(7);\ndayOfWeek[0] = \"Sunday\";\ndayOfWeek[1] = \"Monday\";\ndayOfWeek[2] = \"Tuesday\";\ndayOfWeek[3] = \"Wednesday\";\ndayOfWeek[4] = \"Thursday\";\ndayOfWeek[5] = \"Friday\";\ndayOfWeek[6] = \"Saturday\";\n\nlet monthOfYear = new Array(12);\nmonthOfYear[0] = \"January\";\nmonthOfYear[1] = \"February\";\nmonthOfYear[2] = \"March\";\nmonthOfYear[3] = \"April\";\nmonthOfYear[4] = \"May\";\nmonthOfYear[5] = \"June\";\nmonthOfYear[6] = \"July\";\nmonthOfYear[7] = \"August\";\nmonthOfYear[8] = \"September\";\nmonthOfYear[9] = \"October\";\nmonthOfYear[10] = \"November\";\nmonthOfYear[11] = \"December\";\n\nexport const getReadableDate = (shortDate) => {\n    let readableDate = new Date(shortDate);\n    let day = readableDate.getDay();\n    let month = readableDate.getMonth();\n    let date = readableDate.getDate();\n    return `${dayOfWeek[day]}, ${monthOfYear[month]} ${date}`;\n}","import { Fragment } from \"react\";\nimport { getReadableDate } from \"../data/dateHelper\";\nimport { timeDataMap } from \"../data/timeData\";\n\n\nfunction ReservationBookingInfo(props) {\n\n    return (\n        <Fragment>\n            <div className=\"reservation-title\">Simply Dumplings - Calgary</div>\n            <div>{getReadableDate(props.reserveDate)}</div>\n            <div>{timeDataMap.get(props.reserveSelectedTimeSlot)}</div>\n            <div>{props.numOfPeopleStr}</div>\n        </Fragment>\n    );\n}\n\nexport default ReservationBookingInfo;","import { Fragment } from \"react\";\n\n\nfunction ReservationWhatToKnow() {\n    return (\n        <Fragment>\n            <div className=\"reservation-title smaller-text\">What to know before you go</div>\n            <div className=\"smaller-text\">A note from the restaurant</div>\n            <div className=\"smaller-text\">\n                Thank you for choosing Simply Dumpling - Calgary\n                (located on 101 9 Ave SW). Should your plans change, \n                please let us know.\n            </div>                \n        </Fragment>\n    );\n}\n\n\nexport default ReservationWhatToKnow;","import { faCheckCircle, faUtensils } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classnames from \"classnames\";\nimport { useFormik } from \"formik\";\nimport { Fragment, useState } from \"react\";\nimport { Form, Jumbotron, Nav, NavItem, TabContent, TabPane, NavLink, Button, DropdownToggle, DropdownMenu, DropdownItem, Input, InputGroup, InputGroupButtonDropdown, InputGroupAddon, FormGroup, Label, FormFeedback, Row, Col, Fade } from \"reactstrap\";\nimport { timeDataMap } from \"../data/timeData\";\nimport ReservationBookingInfo from \"./ReservationBookingInfo\";\nimport ReservationWhatToKnow from \"./ReservationWhatToKnow\";\n\n\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    phone: '',\n    email: '',\n    occasion: '',\n    specialRequest: ''\n};\n\n\nconst validate = (values) => {\n    let errors = {};\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!values.firstName) {\n        errors.firstName = 'Required';\n    }\n    \n    if (!values.lastName) {\n        errors.lastName = 'Required';\n    }\n\n    if (!values.phone) {\n        errors.phone = 'Required';\n    }\n    \n    if (!values.email) {\n        errors.email = 'Required';\n    }\n    else if (!emailRegex.test(values.email)) {\n        errors.email = \"Please enter a valid email address\";\n    }\n\n    return errors;\n};\n\n\nfunction Reservations(props) {\n\n    console.log(\"reserve props:\", props);\n\n    const onSubmit = (values) => {\n        console.log(\"onSubmit: \" + JSON.stringify(values));\n        props.submitReservation(values.firstName,\n                                values.lastName,\n                                values.phone,\n                                values.email,\n                                values.occasion,\n                                values.specialRequest);\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validate: validate\n    });\n\n\n    /*********************************** \n     * activeTab state\n     */\n    const switchTab = (tab) => {\n        props.selectReserveActiveTab(tab);\n    };\n\n    /*********************************** \n     * numOfPeople state\n     */\n    const [numOfPeopleIsOpen, setNumOfPeopleIsOpen] = useState(false);\n    const toggleNumOfPeopleDropdown = () => {\n        setNumOfPeopleIsOpen(!numOfPeopleIsOpen);\n    };\n\n    const setNumOfPeople = (numOfPeople) => {\n        props.setReserveNumOfPeople(numOfPeople);\n    };\n\n    const getNumOfPeople = () => {\n        if (props.reserveNumOfPeople === 0)\n            return \"# People\";\n        else if (props.reserveNumOfPeople === 1)\n            return \"1 Person\";\n        else if (props.reserveNumOfPeople >= 1)\n            return props.reserveNumOfPeople + \" People\";\n        else\n            return \"# People\";\n    };\n\n\n    /*********************************** \n     * time state\n     */\n    const [timeIsOpen, setTimeIsOpen] = useState(false);\n    const toggleTimeIsOpenDropdown = () => {\n        setTimeIsOpen(!timeIsOpen);\n    };\n\n    const setTime = (time) => {\n        props.setReserveTime(time);\n    };\n    const getTime = () => {\n        if (props.reserveTime === 'Time')\n            return props.reserveTime;\n\n        let timeStr = timeDataMap.get(props.reserveTime);\n        if (typeof timeStr === 'undefined')\n            return 'Time';\n\n        return timeStr;\n    };\n\n    /*********************************** \n     * date state\n     */\n    const onChangeDate = (val) => {\n        props.setReserveDate(val.target.value);\n    };\n\n    const isReadyToFindATable = () => {\n        return (props.reserveDate.length > 0 && \n            props.reserveTime !== 'Time' && \n            props.reserveNumOfPeople > 0);\n    };\n\n    /*********************************** \n     * Handle FindATable\n     */\n    const handleFindATable = () => {\n        if (isReadyToFindATable())\n            props.findATable(props.reserveDate, props.reserveTime, props.reserveNumOfPeople);\n    };\n\n    /*********************************** \n     * Handle handlePickATimeSlot\n     */\n    const handlePickATimeSlot = (timeId) => {\n        props.selectReserveTimeSlot(timeId);\n        \n    };\n\n    const ReservationsHeader = () => {\n        return (\n            <Jumbotron className=\"jumbotron-fluid reservations_bg_img\">\n                <div className=\"container pt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 className=\"display-4 pt-5 home_jumbotron_text\">Reservations</h1>\n                            <div>&nbsp;</div>\n                            <p className=\"lead home_jumbotron_text\">We believe food should be beautifully designed, purposefully executed, and hand-crafted.</p>\n                            <p className=\"lead home_jumbotron_text\">Let our talented chefs and events team pamper you and your loved ones in the comfort of your home. Breathtaking cuisine, attentive service, and flawless execution await.</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    };\n\n\n    const UtensilsIcon = <FontAwesomeIcon icon={faUtensils} size=\"1x\"/>\n    const CheckCircleIcon = <FontAwesomeIcon icon={faCheckCircle} size=\"1x\" />\n    const CheckCircleIconBig = <FontAwesomeIcon icon={faCheckCircle} size=\"3x\"/>\n\n    const AvailTimes = props.reserveAvailTimes.map((availTime) => {\n        return (\n            <div key={availTime.id} className=\"btn-group mr-1\" role=\"group\">\n                <Button className=\"reservations-find-btn mr-1\"\n                        key={availTime.id}\n                        onClick={() => {handlePickATimeSlot(availTime.id); switchTab(\"yourDetails\");}}>\n                    {UtensilsIcon}&nbsp; {availTime.time}\n                </Button>\n            </div>\n        );\n    });\n\n\n    const showStepNumOrFinished = (tab, stepNum) => {\n        if (tab === 'findTable' && props.activeTab !== tab) {\n            return CheckCircleIcon;\n        } \n        else if (tab === 'yourDetails' && props.activeTab === 'yourReservation') {\n            return CheckCircleIcon;\n        }\n        else if (tab === 'yourReservation' && props.activeTab === tab) {\n            return CheckCircleIcon;\n        }\n        else {\n            return stepNum + \". \";\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <ReservationsHeader/>\n            \n                <div className=\"container\">                \n                    <Nav className=\"menu-page-nav\">\n                        <NavItem>\n                            <NavLink className={classnames({active: props.activeTab === 'findTable'})}\n                            onClick={() => switchTab('findTable')}>\n                                {showStepNumOrFinished('findTable', 1)} Find a Table\n                            </NavLink>\n                        </NavItem>  \n                        <NavItem>\n                            <NavLink className={classnames({active: props.activeTab === 'yourDetails'})}>\n                            {showStepNumOrFinished('yourDetails', 2)} Your Details\n                            </NavLink>\n                        </NavItem>   \n                        <NavItem>\n                            <NavLink className={classnames({active: props.activeTab === 'yourReservation'})}>\n                            {showStepNumOrFinished('yourReservation', 3)} Your Reservation\n                            </NavLink>\n                        </NavItem>                                              \n                    </Nav>  \n                    <Fade big>\n                        <TabContent activeTab={props.activeTab}>\n                            <TabPane tabId=\"findTable\" className=\"pt-4 pb-4\">\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <InputGroup>\n                                            <InputGroupButtonDropdown addonType=\"prepend\" isOpen={numOfPeopleIsOpen} toggle={toggleNumOfPeopleDropdown}>\n                                                <DropdownToggle className=\"reservations-btn\" outline caret>\n                                                    {getNumOfPeople()}\n                                                </DropdownToggle>\n                                                <DropdownMenu>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(1)}}>1 Person</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(2)}}>2 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(3)}}>3 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(4)}}>4 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(5)}}>5 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(6)}}>6 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(7)}}>7 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(8)}}>8 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(9)}}>9 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(10)}}>10 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(11)}}>11 People</DropdownItem>\n                                                    <DropdownItem onClick={() => {setNumOfPeople(12)}}>12 People</DropdownItem>\n                                                </DropdownMenu>\n                                            </InputGroupButtonDropdown>\n                                            <InputGroupAddon addonType=\"append\">\n                                                <Input className=\"reservations-btn\" \n                                                       placeholder=\"dd/mm/yyyy\"\n                                                       type=\"date\" \n                                                       onChange={onChangeDate} \n                                                       value={props.reserveDate}/>\n                                            </InputGroupAddon>\n                                            <InputGroupButtonDropdown addonType=\"append\" isOpen={timeIsOpen} toggle={toggleTimeIsOpenDropdown}>\n                                                <DropdownToggle className=\"reservations-btn\" outline caret>\n                                                    {getTime()}\n                                                </DropdownToggle>\n                                                <DropdownMenu>\n                                                    <DropdownItem onClick={() => {setTime(\"1700\")}}>5:00pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"1730\")}}>5:30pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"1800\")}}>6:00pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"1830\")}}>6:30pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"1900\")}}>7:00pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"1930\")}}>7:30pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2000\")}}>8:00pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2030\")}}>8:30pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2100\")}}>9:00pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2130\")}}>9:30pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2200\")}}>10:00pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2230\")}}>10:30pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2300\")}}>11:00pm</DropdownItem>\n                                                    <DropdownItem onClick={() => {setTime(\"2330\")}}>11:30pm</DropdownItem>\n                                                </DropdownMenu>\n                                            </InputGroupButtonDropdown>\n                                            <InputGroupAddon addonType=\"append\">\n                                                <Button className={classnames({disabled: !isReadyToFindATable()}, 'reservations-find-btn')} \n                                                        addonType=\"append\"\n                                                        onClick={handleFindATable}>Find a table</Button>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </div>\n                                    <div className=\"row pt-3\">\n                                        <div className=\"btn-toolbar\" role=\"toolbar\">\n                                            {AvailTimes}\n                                        </div>\n                                    </div>\n                                </div>\n                            </TabPane>                       \n                            <TabPane tabId=\"yourDetails\" className=\"pt-4 pb-4\">\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 col-md-6 pb-4\">\n                                            <Form onSubmit={formik.handleSubmit}>\n                                                <Row form>\n                                                    <Col xs={6}>\n                                                        <FormGroup>\n                                                            <Label for=\"firstName\">First Name</Label>\n                                                            <Input type=\"text\" name=\"firstName\" id=\"firstName\" \n                                                                    className=\"form-field\"\n                                                                    invalid={formik.errors.firstName && formik.touched.firstName ? true : false}\n                                                                    {...formik.getFieldProps('firstName')}/>\n                                                            <FormFeedback>{formik.errors.firstName}</FormFeedback> \n                                                        </FormGroup>\n                                                        \n                                                    </Col>\n                                                    <Col xs={6}>\n                                                        <FormGroup>\n                                                            <Label for=\"lastName\">Last Name</Label>\n                                                            <Input type=\"text\" name=\"lastName\" id=\"lastName\" \n                                                                className=\"form-field\"\n                                                                invalid={formik.errors.lastName && formik.touched.lastName ? true : false}\n                                                                {...formik.getFieldProps('lastName')}/>   \n                                                            <FormFeedback>{formik.errors.lastName}</FormFeedback>                                                \n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                                <FormGroup>\n                                                    <Label for=\"phone\">Phone Number</Label>\n                                                    <Input type=\"tel\" name=\"phone\" id=\"phone\"\n                                                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                                                        className=\"form-field\"\n                                                        placeholder=\"XXX-XXX-XXXX\"\n                                                        invalid={formik.errors.phone && formik.touched.phone ? true : false}\n                                                        {...formik.getFieldProps('phone')}/> \n                                                    <FormFeedback>{formik.errors.phone}</FormFeedback>    \n                                                </FormGroup>                                         \n                                                <FormGroup>\n                                                    <Label for=\"email\">Your Email</Label>\n                                                    <Input type=\"email\" name=\"email\" id=\"email\"\n                                                        className=\"form-field\"\n                                                        invalid={formik.errors.email && formik.touched.email ? true : false}\n                                                        {...formik.getFieldProps('email')}/> \n                                                    <FormFeedback>{formik.errors.email}</FormFeedback>    \n                                                </FormGroup>    \n                                                <FormGroup>\n                                                    <Label for=\"occasion\">Occasion</Label>\n                                                    <Input type=\"select\" name=\"occasion\" id=\"occasion\"\n                                                        className=\"form-field\"\n                                                        invalid={formik.errors.occasion && formik.touched.occasion ? true : false}\n                                                        {...formik.getFieldProps('occasion')}>\n                                                        <option>None</option>\n                                                        <option>Birthday</option>\n                                                        <option>Anniversary</option>\n                                                        <option>Date</option>\n                                                        <option>Special Occasion</option>\n                                                        <option>Business Meal</option>\n                                                    </Input>\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Label for=\"specialRequest\">Special Request</Label>\n                                                    <Input type=\"text\" name=\"specialRequest\" id=\"specialRequest\"\n                                                        className=\"form-field\"\n                                                        invalid={formik.errors.specialRequest && formik.touched.specialRequest ? true : false}\n                                                        {...formik.getFieldProps('specialRequest')}/> \n                                                    <FormFeedback>{formik.errors.specialRequest}</FormFeedback>    \n                                                </FormGroup>  \n                                                <Button type=\"submit\" className=\"form-field pt-3 pb-3 pl-4 pr-4 mt-4\" outline>CONFIRM RESERVATION</Button>                                                                              \n                                            </Form>\n                                        </div>\n                                        <div className=\"col-12 col-md-6\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <ReservationBookingInfo reserveDate={props.reserveDate}\n                                                                            reserveSelectedTimeSlot={props.reserveSelectedTimeSlot}\n                                                                            numOfPeopleStr={getNumOfPeople()}/>\n                                                </div>\n                                            </div>\n                                            <div className=\"row pt-3\">\n                                                <div className=\"col-12\">\n                                                    <ReservationWhatToKnow/>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </TabPane>  \n                            <TabPane tabId=\"yourReservation\" className=\"pt-4 pb-1\">\n                                <div className=\"container\">\n                                    <div className=\"row reservation-confirmed\">\n                                        <div className=\"pl-3\">{CheckCircleIconBig}</div>\n                                        <div>\n                                            <div className=\"container\">\n                                                <div className=\"reservation-title\">Your table has been confirmed!</div>\n                                                <div>An email confirmation has been sent to you.</div>\n                                                <div>Confirmation #{props.reserveConfirmNum}</div>\n                                            </div>\n                                        </div>                                \n                                    </div>\n                                    <div className=\"row pt-4\">\n                                        <div className=\"col-12 col-md-6 pb-3\">\n                                            <ReservationBookingInfo reserveDate={props.reserveDate}\n                                                                                reserveSelectedTimeSlot={props.reserveSelectedTimeSlot}\n                                                                                numOfPeopleStr={getNumOfPeople()}/>\n                                        </div>\n                                        <div className=\"col-12 col-md-6 pb-3\">\n                                            <ReservationWhatToKnow/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </TabPane> \n                        </TabContent>\n                    </Fade> \n                </div>\n        </Fragment>\n    );\n\n}\n\nexport default Reservations;","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { addMenuItems, findATable, selectActiveTab, selectReserveTimeSlot, setReserveDate, setReserveNumOfPeople, setReserveTime, submitCateringInquery, submitContactInquery, submitReservation } from '../redux/actionCreators';\nimport Catering from './Catering';\nimport Footer from './Footer';\nimport Home from './Home';\nimport Menu from './Menu';\nimport OrderOnline from './OrderOnline';\nimport ContactUs from './ContactUs';\nimport NavMenu from './NavMenu';\nimport Reservations from './Reservations';\n\n\nconst mapStateToProps = (state) => {\n\n    return {\n        catering: state.catering,\n        contact: state.contact,\n        menu: state.menu,\n        reserve: state.reserve\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    submitCateringInquery: (inquery) => dispatch(submitCateringInquery(inquery)),\n    submitContactInquery: (inquery) => dispatch(submitContactInquery(inquery)),\n    addMenuItems: () => dispatch(addMenuItems()),\n    findATable: (date, time, numOfPeople) => dispatch(findATable(date, time, numOfPeople)),\n    selectReserveTimeSlot: (timeslot) => dispatch(selectReserveTimeSlot(timeslot)),\n    selectReserveActiveTab: (tab) => dispatch(selectActiveTab(tab)),\n    setReserveNumOfPeople: (numOfPeople) => dispatch(setReserveNumOfPeople(numOfPeople)),\n    setReserveDate: (date) => dispatch(setReserveDate(date)),\n    setReserveTime: (time) => dispatch(setReserveTime(time)),\n    submitReservation: (firstName, lastName, phone, email, occasion, specialRequest) => dispatch(submitReservation(firstName, lastName, phone, email, occasion, specialRequest))\n});\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.addMenuItems();\n    }\n\n    render() {\n        \n        const HomePage = () => {\n            return (\n                <Home/>\n            );\n        }\n\n        const CateringPage = () => {\n            return (\n                <Catering submitCateringInquery={this.props.submitCateringInquery}\n                          isInquerySubmitted={this.props.catering.inquerySubmitted}/>\n            );\n        }\n\n        const MenuPage = () => {\n\n            return (\n                <Menu menu={this.props.menu} \n                      addMenuItems={this.props.addMenuItems}/>\n            );\n        }\n\n        const OrderOnlinePage = () => {\n            return (\n                <OrderOnline />\n            );\n        }\n\n        const ContactUsPage = () => {\n            return (\n                <ContactUs submitContactInquery={this.props.submitContactInquery}\n                           isInquerySubmitted={this.props.contact.inquerySubmitted}/>\n            );\n        }\n\n        const ReservationsPage = () => {\n            return (\n                <Reservations findATable={this.props.findATable}\n                              selectReserveTimeSlot={this.props.selectReserveTimeSlot}\n                              selectReserveActiveTab={this.props.selectReserveActiveTab}\n                              setReserveNumOfPeople={this.props.setReserveNumOfPeople}\n                              setReserveDate={this.props.setReserveDate}\n                              setReserveTime={this.props.setReserveTime}\n                              submitReservation={this.props.submitReservation}\n                              reserveDate={this.props.reserve.date}\n                              reserveTime={this.props.reserve.time}\n                              reserveNumOfPeople={this.props.reserve.numOfPeople}\n                              reserveSelectedTimeSlot={this.props.reserve.selectedTimeSlot}\n                              reserveAvailTimes={this.props.reserve.availTimes}\n                              reserveConfirmNum={this.props.reserve.confirmationNum}\n                              activeTab={this.props.reserve.activeTab} />\n            );\n        }\n        \n\n        return (\n            <div>\n                <NavMenu/>\n                <Switch>\n                    <Route path='/home'  component={HomePage}/>\n                    <Route path='/catering' component={CateringPage} />\n                    <Route path='/menu' component={MenuPage} />\n                    <Route path='/order' component={OrderOnlinePage} />\n                    <Route path='/contactus' component={ContactUsPage} />\n                    <Route path='/reserve' component={ReservationsPage} />\n                    <Redirect to=\"/home\"/>\n                </Switch>\n                <Footer/>\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './actionTypes';\n\n\nexport const CateringReducer = (\n    state = {\n        inqueryData: null,\n        inquerySubmitted: false\n    },\n    action) => {\n\n        switch (action.type) {\n            case ActionTypes.ADD_CATERING_INQUERY:\n                return {...state, inqueryData: action.payload, inquerySubmitted: true};\n            default:\n                return state;\n        }\n    }","import * as ActionTypes from './actionTypes';\n\n\nexport const ContactReducer = (\n    state = {\n        inqueryData: null,\n        inquerySubmitted: false\n    },\n    action) => {\n        switch (action.type) {\n            case ActionTypes.ADD_CONTACT_INQUERY:\n                return {...state, inqueryData: action.payload, inquerySubmitted: true};\n            default:\n                return state;\n        }\n    }","import * as ActionTypes from './actionTypes';\n\n\nconst initialState = {\n    appetizer: [],\n    dumpling: [],\n    rice: [],\n    noodle: [],\n    meat: [],\n    dessert: []\n};\n\n\nexport const MenuReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ActionTypes.ADD_MENU_APPETIZER:\n            return {...state, appetizer: action.payload};\n        case ActionTypes.ADD_MENU_DUMPLING:\n            return {...state, dumpling: action.payload};\n        case ActionTypes.ADD_MENU_RICE:\n            return {...state, rice: action.payload};\n        case ActionTypes.ADD_MENU_NOODLE:\n            return {...state, noodle: action.payload};\n        case ActionTypes.ADD_MENU_MEAT:\n            return {...state, meat: action.payload};\n        case ActionTypes.ADD_MENU_DESSERT:\n            return {...state, dessert: action.payload};\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './actionTypes';\n\n\nconst findATableInitState = {\n    numOfPeople: 0,\n    date: '',\n    time: 'Time',\n    availTimes: [],\n    selectedTimeSlot: '',\n    activeTab: 'findTable',\n    confirmationNum: ''\n};\n\nexport const ReserveReducer = (state = findATableInitState, action) => {\n\n    //console.log(\"payload:\", action.payload);\n\n    switch (action.type) {\n        case ActionTypes.SET_RESERVE_NUM_PEOPLE:\n            return { ...state, numOfPeople: action.payload };\n        case ActionTypes.SET_RESERVE_DATE:\n            return { ...state, date: action.payload };\n        case ActionTypes.SET_RESERVE_TIME:\n            return { ...state, time: action.payload };\n        case ActionTypes.FIND_A_TABLE:\n            return { ...state, \n                date: action.payload.date,\n                time: action.payload.time,\n                numOfPeople: action.payload.numOfPeople,\n                availTimes: action.payload.availTimes\n            };\n        case ActionTypes.SELECT_TIME_SLOT:\n            return { ...state, selectedTimeSlot: action.payload };\n        case ActionTypes.SELECT_ACTIVE_TAB:\n            return { ...state, activeTab: action.payload };\n        case ActionTypes.SET_RESERVE_CONFIRM_NUM:\n                return { ...state, confirmationNum: action.payload };                    \n        default:\n            return state;\n    }\n};","import './App.css';\nimport Main from './components/Main';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConfigureStore } from './redux/configureStore';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst store = ConfigureStore();\n\nfunction App() {\n\n  return (    \n    <Provider store={store}>\n      <HashRouter>\n        <div >\n          <Main/>\n        </div>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { CateringReducer } from \"./cateringReducer\";\nimport { ContactReducer } from \"./contactReducer\";\nimport { MenuReducer } from \"./menuReducer\";\nimport { ReserveReducer } from \"./reserveReducer\";\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            catering: CateringReducer,\n            menu: MenuReducer,\n            contact: ContactReducer,\n            reserve: ReserveReducer\n        }),\n        applyMiddleware(thunk)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}